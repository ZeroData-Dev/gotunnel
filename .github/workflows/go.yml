name: Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0, 1.2.3-beta)'
        required: false
        default: ''

jobs:
  build:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        os: [ubuntu-24.04,macos-latest,windows-latest]
        arch: [amd64, arm64]
    env:
      GOOS: ${{ matrix.os == 'ubuntu-24.04' && 'linux' || matrix.os == 'macos-latest' && 'darwin' || 'windows' }}
      GOARCH: ${{ matrix.arch }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Build binary
        run: |
          mkdir -p dist
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            pwsh -Command "go build -v -o dist/gotunnel-${{ matrix.os }}-${{ matrix.arch }}.exe"
          else
            go build -v -o dist/gotunnel-${{ matrix.os }}-${{ matrix.arch }}
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: gotunnel-${{ matrix.os }}-${{ matrix.arch }}
          path: dist/gotunnel-${{ matrix.os }}-${{ matrix.arch }}

  release:
    needs: build
    runs-on: ubuntu-24.04
    if: |
      github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') ||
      github.event_name == 'workflow_dispatch'
    permissions:
      contents: write
    steps:
      - name: Checkout code (required for Git commands)
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Debug - List Downloaded Files
        run: |
          echo "Contents of the 'dist' directory after download:"
          ls -R dist
          echo "Current working directory:"
          pwd
          echo "Looking for 'gotunnel-*' files:"
          find dist -name "gotunnel-*" -print

      - name: Set up Git user
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Define Tag Name for Manual Dispatch
        id: set_tag_name
        if: github.event_name == 'workflow_dispatch'
        run: |
          TAG_NAME="v${{ github.event.inputs.version || format('{0}-{1}', github.run_id, github.run_attempt) }}"
          echo "Generated tag name: $TAG_NAME"
          echo "tag_name=$TAG_NAME" >> "$GITHUB_OUTPUT"

      - name: Create and Push Tag
        if: github.event_name == 'workflow_dispatch'
        run: |
          TAG_TO_CREATE="${{ steps.set_tag_name.outputs.tag_name }}"
          git tag -a "$TAG_TO_CREATE" -m "Release $TAG_TO_CREATE (Manual Dispatch)"
          git push origin "$TAG_TO_CREATE"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/* # This should now find the files
          tag_name: ${{ github.event_name == 'workflow_dispatch' && steps.set_tag_name.outputs.tag_name || github.ref }}
          name: ${{ github.event_name == 'workflow_dispatch' && format('Manual Release {0}', steps.set_tag_name.outputs.tag_name) || format('Release {0}', github.ref_name) }}
          draft: ${{ github.event_name == 'workflow_dispatch' }}
          prerelease: ${{ github.event_name == 'workflow_dispatch' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
